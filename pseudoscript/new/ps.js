// Generated by CoffeeScript 1.10.0
(function() {
  var Light, Noun, Universe, l,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Universe = (function() {
    function Universe() {}

    Universe.prototype.contains = [];

    return Universe;

  })();

  Noun = (function(superClass) {
    extend(Noun, superClass);

    function Noun() {
      return Noun.__super__.constructor.apply(this, arguments);
    }

    Noun.prototype.set = function(property, value) {};

    Noun.prototype.get = function(property, value) {};

    Noun.prototype.containedIn = [];

    return Noun;

  })(Universe);

  Light = (function(superClass) {
    extend(Light, superClass);

    function Light() {
      return Light.__super__.constructor.apply(this, arguments);
    }

    Light.prototype.state = {
      'on': false,
      'brightness': 45
    };

    Light.prototype.property = {
      'color': null
    };

    return Light;

  })(Noun);

  l = new Light();

  console.log(l.state.on);

}).call(this);
